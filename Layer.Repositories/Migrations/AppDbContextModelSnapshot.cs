// <auto-generated />
using System;
using Layer.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Layer.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Layer.Core.Models.CampaignChannels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActionEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActionStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignsId")
                        .HasColumnType("int");

                    b.Property<string>("ChannelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChannelsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignsId");

                    b.HasIndex("ChannelsId");

                    b.ToTable("CampaignChannels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionEndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionStartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignsId = 1,
                            ChannelsId = 1,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8786),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            ActionEndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionStartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignsId = 1,
                            ChannelsId = 2,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8825),
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            ActionEndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionStartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignsId = 2,
                            ChannelsId = 1,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8828),
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            ActionEndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionStartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignsId = 4,
                            ChannelsId = 3,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8830),
                            Status = false
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.Campaigns", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CampaignParameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampaignType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampaignType = "General",
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8903),
                            EndDate = new DateTime(23, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Kampanya 1",
                            Priority = 10,
                            StartDate = new DateTime(23, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampaignType = "CustomerSpecial",
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8909),
                            EndDate = new DateTime(23, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Kampanya 2",
                            Priority = 20,
                            StartDate = new DateTime(23, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            CampaignType = "General",
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8912),
                            EndDate = new DateTime(23, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Kampanya 3",
                            Priority = 30,
                            StartDate = new DateTime(22, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampaignType = "CustomerSpecial",
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(8914),
                            EndDate = new DateTime(23, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Kampanya 4",
                            Priority = 40,
                            StartDate = new DateTime(23, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.Channels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChannelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChannelType = "MOBIL",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ChannelType = "WEB",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ChannelType = "EMAIL",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ChannelType = "SMS",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.CustomerCampaigns", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomersId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignsId");

                    b.HasIndex("CustomersId");

                    b.ToTable("CustomerCampaigns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampaignsId = 4,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(9034),
                            CustomersId = 1
                        },
                        new
                        {
                            Id = 2,
                            CampaignsId = 3,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(9037),
                            CustomersId = 2
                        },
                        new
                        {
                            Id = 3,
                            CampaignsId = 3,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(9039),
                            CustomersId = 3
                        },
                        new
                        {
                            Id = 4,
                            CampaignsId = 2,
                            CreatedDate = new DateTime(2023, 9, 1, 15, 19, 55, 437, DateTimeKind.Local).AddTicks(9041),
                            CustomersId = 4
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("CardStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerNo")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 0,
                            CardStatus = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Customer1",
                            CustomerNo = 1000
                        },
                        new
                        {
                            Id = 2,
                            Age = 0,
                            CardStatus = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Customer2",
                            CustomerNo = 1001
                        },
                        new
                        {
                            Id = 3,
                            Age = 0,
                            CardStatus = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Customer3",
                            CustomerNo = 1002
                        },
                        new
                        {
                            Id = 4,
                            Age = 0,
                            CardStatus = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Customer4",
                            CustomerNo = 1003
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.Parameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Parameters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description1",
                            GroupCode = "GeneralCampaigns",
                            ParameterCode = "Public",
                            ParameterValue = "Genel Kampanya"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description2",
                            GroupCode = "CustomerCampaigns",
                            ParameterCode = "Private",
                            ParameterValue = "Müşteri Bazlı Kampanya"
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yavuz"
                        });
                });

            modelBuilder.Entity("Layer.Core.Models.CampaignChannels", b =>
                {
                    b.HasOne("Layer.Core.Models.Campaigns", "Campaigns")
                        .WithMany("CampaignChannels")
                        .HasForeignKey("CampaignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Layer.Core.Models.Channels", "Channels")
                        .WithMany("CampaignChannels")
                        .HasForeignKey("ChannelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaigns");

                    b.Navigation("Channels");
                });

            modelBuilder.Entity("Layer.Core.Models.CustomerCampaigns", b =>
                {
                    b.HasOne("Layer.Core.Models.Campaigns", "Campaigns")
                        .WithMany("CustomerCampaigns")
                        .HasForeignKey("CampaignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Layer.Core.Models.Customers", "Customers")
                        .WithMany("CustomerCampaigns")
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaigns");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Layer.Core.Models.Campaigns", b =>
                {
                    b.Navigation("CampaignChannels");

                    b.Navigation("CustomerCampaigns");
                });

            modelBuilder.Entity("Layer.Core.Models.Channels", b =>
                {
                    b.Navigation("CampaignChannels");
                });

            modelBuilder.Entity("Layer.Core.Models.Customers", b =>
                {
                    b.Navigation("CustomerCampaigns");
                });
#pragma warning restore 612, 618
        }
    }
}
